{
  "name": "Sails-Hook-SanSeed",
  "tagline": "Hook to add items to the base depending on different localities",
  "body": "# sails-hook-sanseed\r\n\r\n## About\r\nHook Hook for [sails](http://sailsjs.org/) to add items ('seed') to the base depending on different locations. See [faker.js](https://www.npmjs.com/package/faker#api-methods) for more details\r\n\r\n## Settings\r\nInstall\r\n~~~\r\nnpm install sails-hook-sanseed\r\n~~~\r\nDefine at `config/seed.js`\r\n~~~js\r\nmodule.exports.seed = {\r\n  locations : {\r\n    test: {\r\n      user: {\r\n        data: [\r\n          {\r\n            //Some data\r\n            username: \"juan\",\r\n            name: \"Paco\",\r\n            last: \"Pedro\",\r\n            password: \"de la mar\"\r\n          },\r\n          {\r\n            //Some data\r\n          }\r\n        ],\r\n        //If you want to drop before seed\r\n        migrate: 'drop'\r\n      }\r\n    },\r\n    //Another location\r\n    production: {\r\n      user: {\r\n        faker: {\r\n          format: {\r\n            username: \"{{internet.userName}}\",\r\n            names: \"{{name.firstName}} {{name.lastName}}\",\r\n            password: \"{{internet.password}}\"\r\n          },\r\n          locale: \"es\",\r\n          quantity: 10\r\n        },\r\n        // if you want to try without callback an error\r\n        migrate: 'safe'\r\n      }\r\n    },\r\n    serverX: {\r\n      //Some data\r\n    }\r\n  },\r\n  //optional\r\n  routes: true //Defult routes\r\n}\r\n~~~\r\n\r\n## Use\r\nIf `sails.seed.routes` is true seed your models with `/seed/:location` or `/seed/:location/:model` routes, and `/drop/:model` or `/drop` routes to drop models.\r\n\r\n### Aviable Functions\r\nAlso you have `sails.seed` with\r\n\r\n#### seedModel(location, modelName, callback)\r\n\r\n__Arguments__\r\n\r\n* `location` - A string with location name.\r\n* `modelName` - A string with model name.\r\n* `callback(err)` - A callback which is called when all task have finished, or an error occurs.\r\n\r\n#### seedAll(location, callback)\r\n\r\n__Arguments__\r\n\r\n* `location` - A string with location name.\r\n* `callback(err)` - A callback which is called when all task have finished, or an error occurs.\r\n\r\n#### dropModel(modelName, callback)\r\n\r\n__Arguments__\r\n\r\n* `modelName` - A string with model name.\r\n* `callback(err)` - A callback which is called when all task have finished, or an error occurs.\r\n\r\n#### dropAll(callback)\r\n\r\n__Arguments__\r\n\r\n* `callback(err)` - A callback which is called when all task have finished, or an error occurs.\r\n\r\nDefine at `/config/routes.js`:\r\n~~~js\r\nmodule.exports.routes{\r\n  'get /sanseed/:location': function  (req, res, next) {\r\n    sails.seed.seedAll(req.params.location, function(err){\r\n      if(err){\r\n        //do something\r\n      }else{\r\n        //do something\r\n      }\r\n    });\r\n  }\r\n}\r\n~~~\r\n\r\n### Policies\r\nYou have:\r\n* `seedModel`\r\n* `seedAll`\r\n* `dropModel`\r\n* `dropAll`\r\n\r\n\r\nDefine at `/config/routes.js`:\r\n~~~js\r\nmodule.exports.routes{\r\n  'get /sandrop' : [{policy: 'dropAll'}]\r\n}\r\n~~~\r\n\r\n## Test\r\nSee [sails-sanseed-example](https://github.com/sanjorgek/sails-sanseed-example) for more details.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}